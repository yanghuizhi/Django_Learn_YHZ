M:  Model,模型，与数据库进行交互

V:  View,图视 html页面

C:  Controller，控制器，接收请求，处理，返回数据，与视图进行交互(类似于templates)

MVC中重要的思想就是解耦，各自干自己的事情。

简单整理一下思路：

比如一个登陆网页(也就是视图)，点击登陆的时候，将账号和密码发送到MVC框架中的控制器（Controller），我们从控制器中进行处理，需要去查询数据库，但是这里不会直接去操作数据库，我们通过Model去进行操作数据库，回来也一样的。

在Django中，Django把控制器变成了Template，其实是一样的，就是名字不一样了，他把自己的模式叫做MVT。

不同的是：V变成了和MVC中C的功能相同，T和MVC中的V功能相同。

虽然他自己叫做MVT，本质还是遵循的MVC。
